name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        env:
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
          AXIOS_BASEURL: ${{ secrets.AXIOS_BASEURL }}
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
          NGINX_CONFIG: ${{ secrets.NGINX_CONFIG }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: APPLICATION_PROPERTIES,AXIOS_BASEURL,FIREBASE_CONFIG,NGINX_CONFIG
          script_stop: true
          script: |
            echo "EC2 서버 접속 완료"

            cd /home/ubuntu/lookkit-ver2.0

            #  기존 설정 파일 삭제
            if [ -f frontend/src/api/axios.js ]; then
              rm -rf frontend/src/api/axios.js
            fi

            if [ -f frontend/src/firebase/firebaseConfig.js ]; then
              rm -rf frontend/src/firebase/firebaseConfig.js
            fi
            
            rm -rf src/main/resources/application.yml

            #  최신 코드 가져오기
            echo "Git Pull 실행..."
            git pull origin main

            #  환경 변수 반영
            echo "$APPLICATION_PROPERTIES" > src/main/resources/application.yml
            echo "$AXIOS_BASEURL" > frontend/src/api/axios.js
            echo "$FIREBASE_CONFIG" > frontend/src/firebase/firebaseConfig.js

            #  Gradle 빌드 실행
            echo "Gradle 빌드 시작..."
            ./gradlew clean build -x test

            #  기존 Spring Boot 프로세스 종료 (8081)
            echo "기존 Spring Boot 종료..."
            sudo fuser -k -n tcp 8081 || true 

            #  Spring Boot 새로 실행
            echo " Spring Boot 실행 (포트 8081)..."
            nohup java -jar build/libs/lookkit2nd-0.0.1-SNAPSHOT.jar > ./output.log 2>&1 &

            #  Nginx 설치 (없으면 설치)
            if ! command -v nginx &> /dev/null
            then
                echo " Nginx 설치 중..."
                sudo apt update
                sudo apt install nginx -y
            else
                echo " Nginx가 이미 설치되어 있음."
            fi

            #  Nginx 설정 적용
            echo "Nginx 설정 적용 중..."
            echo "$NGINX_CONFIG" | sudo tee /etc/nginx/sites-available/default > /dev/null

            #  방화벽 설정 (80, 443 포트 허용)
            echo "방화벽 설정 중..."
            sudo ufw allow 'Nginx Full'
            sudo ufw enable
            sudo ufw status

            #  Nginx 설정 적용 & 재시작
            echo " Nginx 설정 적용 중..."
            sudo nginx -t && sudo systemctl restart nginx

            echo "배포 완료"