import{r as h,f as F,u as g}from"./firebaseConfig-Cr89vwH1.js";import{_ as m,b as n,d as a,v as p,t as d,m as c,i}from"./index-Cm_Q1rqZ.js";const _={data(){return{totalFolders:0,totalFiles:0,uploadProgress:0,currentFolder:"",currentFile:""}},methods:{async handleDrop(o){const r=o.dataTransfer.items;let t={};for(let s=0;s<r.length;s++){const e=r[s].webkitGetAsEntry();e&&(e.isDirectory?(t[e.name]=[],await this.traverseFileTree(e,t[e.name])):console.warn(`폴더가 아닌 항목은 무시됨: ${e.name}`))}this.totalFolders=Object.keys(t).length,console.log("폴더별 파일 리스트:",t);for(const[s,e]of Object.entries(t))this.currentFolder=s,this.totalFiles=e.length,await this.uploadFiles(s,e);this.currentFolder="모든 폴더 업로드 완료"},async traverseFileTree(o,r,t=""){return new Promise((s,e)=>{o.isFile?o.file(l=>{r.push({file:l,relativePath:t+l.name}),s()}):o.isDirectory&&o.createReader().readEntries(async u=>{for(let f of u)await this.traverseFileTree(f,r,t+o.name+"/");s()},e)})},async uploadFiles(o,r){let t=0;for(const{file:s,relativePath:e}of r)try{this.currentFile=`${o}/${e}`;const l=h(F,`lookkit/products/${e}`);await g(l,s),t++,this.uploadProgress=Math.round(t/this.totalFiles*100)}catch(l){console.error(`파일 업로드 실패: ${e}`,l)}this.uploadProgress=100}}},y={id:"app"},v={class:"status"},k={key:0},D={key:1},P={key:2},w={key:3},b=["value"];function x(o,r,t,s,e,l){return i(),n("div",y,[r[3]||(r[3]=a("h1",null,"드래그 앤 드롭 폴더 업로드",-1)),a("div",{class:"dropzone",onDrop:r[0]||(r[0]=p((...u)=>l.handleDrop&&l.handleDrop(...u),["prevent"])),onDragover:r[1]||(r[1]=p(()=>{},["prevent"]))},r[2]||(r[2]=[a("p",null,"여기에 폴더나 파일을 드래그하세요",-1)]),32),a("div",v,[e.totalFolders?(i(),n("p",k,"총 "+d(e.totalFolders)+"개 폴더 업로드",1)):c("",!0),e.currentFolder?(i(),n("p",D,"현재 폴더: "+d(e.currentFolder),1)):c("",!0),e.uploadProgress?(i(),n("p",P,"업로드 진행: "+d(e.uploadProgress)+"%",1)):c("",!0),e.currentFile?(i(),n("p",w,"현재 파일: "+d(e.currentFile),1)):c("",!0)]),a("progress",{value:e.uploadProgress,max:"100"},null,8,b)])}const E=m(_,[["render",x],["__scopeId","data-v-af7ec733"]]);export{E as default};
